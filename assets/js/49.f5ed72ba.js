(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{229:function(t,e,r){"use strict";r.r(e);var a=r(1),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"exporting-nlp-progress-into-a-structure-format"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#exporting-nlp-progress-into-a-structure-format"}},[t._v("#")]),t._v(" Exporting NLP-progress into a structure format")]),t._v(" "),r("p",[t._v("Parse and export the unstructured information from Markdown into a structured JSON format.")]),t._v(" "),r("h2",{attrs:{id:"installation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),r("p",[t._v("Requires Python 3.6+.")]),t._v(" "),r("p",[t._v("Create a virtualenv and install requirements (you can also use conda):")]),t._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[t._v("virtualenv -p python3 venv\n"),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" venv/bin/activate\n\npip "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -r requirements.txt\n")])])]),r("h2",{attrs:{id:"running"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#running"}},[t._v("#")]),t._v(" Running")]),t._v(" "),r("p",[t._v("From the NLP-progress root directly (where the LICENCE file is), run:")]),t._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[t._v("python structured/export.py "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("one or "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" directories or files"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),r("p",[t._v("For example, to export all the data in the "),r("code",[t._v("english/")]),t._v(" directory:")]),t._v(" "),r("div",{staticClass:"language-shell extra-class"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[t._v("python structured/export.py english\n")])])]),r("p",[t._v("By default the output will be written into "),r("code",[t._v("structured.json")]),t._v(", but you can override this with the "),r("code",[t._v("--output")]),t._v(" parameter.")])])}),[],!1,null,null,null);e.default=s.exports}}]);